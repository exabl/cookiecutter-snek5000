from snek5000.info import InfoSolverMake
{% if kth_framework %}
from snek5000.solvers.kth import SimulKTH as SimulBase
{% else %}
from snek5000.solvers.base import SimulNek as SimulBase
{% endif %}


class InfoSolver{{short_name | title}}(InfoSolverMake):
    """Contain the information on a :class:`{{package_name}}.solver.Simul`
    instance.

    """

    def _init_root(self):
        from . import short_name

        super()._init_root()
        self.module_name = "{{package_name}}.solver"
        self.class_name = "Simul"
        self.short_name = short_name

        self.classes.Output.module_name = "{{package_name}}.output"
        self.classes.Output.class_name = "Output{{short_name | title}}"

        # To solve for the temperature, one needs to add a [TEMPERATURE]
        # section in the .par file. It can be done like this:
        self.par_sections_disabled.remove("temperature")


class Simul{{short_name | title}}(SimulBase):
    """A solver which compiles and runs using a Snakefile."""

    InfoSolver = InfoSolver{{short_name | title}}

    @classmethod
    def create_default_params(cls):
        """Set default values of parameters as given in reference
        implementation.

        """
        params = super().create_default_params()
        # Re-define default values for parameters here, if necessary
        # following ``{{short_name}}.par``, ``{{short_name}}.box`` and ``SIZE`` files

        # Extend with new default parameters here, for example:
        # params.nek.velocity._set_attrib("advection", True)

        return params


Simul = Simul{{short_name | title}}
